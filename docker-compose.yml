version: '3.9'
services:
  wcb3:
    container_name: wcb3_container
    build:
      context: .
      dockerfile: Dockerfile
    pull_policy: build
    restart: unless-stopped
    env_file: stack.env
    entrypoint: ['python', 'bot.py']
    depends_on:
      wcb3_postgres:
        condition: service_healthy

  wcb3_postgres:
    container_name: wcb3_postgres_container
    image: postgres:latest
    restart: always
    env_file: stack.env

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

    expose:
      - "5432"

    volumes:
      - ./database/postgres_data:/var/lib/postgresql/data
 
    ports:
      - 5432:5432

  adminer:
    container_name: wcb3_adminer_container
    image: adminer
    restart: unless-stopped
    ports:
      - 8080:8080
    depends_on:
      wcb3_postgres:
        condition: service_healthy


volumes:
  postgres_data:

networks:
  esnet:

